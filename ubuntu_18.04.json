{
  "description": "Build Ubuntu 18.04 (bionic) x86_64 Proxmox template",
  "variables": {
    "proxmox_url": "https://192.168.136.11:8006/api2/json",
    "proxmox_username": "root@pam",
    "proxmox_password": "{{env `PROXMOX_PWD`}}",
    "iso_filename": "ubuntu_bionic_minimal.iso",
    "vm_id": "200",
    "vm_name": "ubuntu-1804",
    "template_description": "Ubuntu 18.04 x86_64 template built with packer",
    "vm_memory": "2048",
    "vm_cores": "1",
    "vm_disksize": "8G",
    "ssh_username": "packer",
    "ssh_password": "p@ck3r-t3mp!"
  },
  "sensitive-variables": [
    "proxmox_password",
    "ssh_password"
  ],
  "builders": [
    {
      "type": "proxmox",
      "proxmox_url":  "{{user `proxmox_url`}}",
      "insecure_skip_tls_verify": true,
      "username": "{{user `proxmox_username`}}",
      "password": "{{user `proxmox_password`}}",
      "vm_id":  "{{user `vm_id`}}",
      "vm_name": "{{user `vm_name`}}",
      "template_name": "{{user `vm_name`}}-template",
      "template_description":"{{user `template_description`}}",
      "memory": "{{user `vm_memory`}}",
      "cores": "{{user `vm_cores`}}",
      "cpu_type": "host",
      "os": "l26",
      "http_directory": "http",
      "node": "macmini1",
      "network_adapters": [
        {
          "model": "virtio",
          "bridge": "vmbr0"
        }
      ],
      "disks": [
        {
          "type": "scsi",
          "disk_size": "{{user `vm_disksize`}}",
          "storage_pool": "local-lvm",
          "storage_pool_type": "lvm"
        }
      ],
      "ssh_username": "{{user `ssh_username`}}",
      "ssh_password": "{{user `ssh_password`}}",
      "ssh_timeout": "30m",
      "iso_file": "local:iso/{{user `iso_filename`}}",
      "unmount_iso": true,
      "boot_wait": "10s",
      "boot_command": [
        "<esc><wait>",
        "install",
        " initrd=initrd.gz",
        " auto=true",
        " priority=critical",
        " preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ubuntu_preseed.cfg",
        " --- <wait>",
        "<enter><wait>"
      ]
    }
  ],
	"provisioners": [
		{
			"pause_before": "20s",
      "type": "shell",
      "inline_shebang": "/bin/bash -e",
			"environment_vars": [
        "DEBIAN_FRONTEND=noninteractive"
      ],
			"inline": [
        "#",
        "#  Final upgrade",
        "#",
        "sudo apt-get update",
        "sudo apt-get -y upgrade",
        "sudo apt-get -y dist-upgrade",
        "sudo apt-get -y install qemu-guest-agent cloud-init",
        "#",
        "#  Create Ansible user",
        "#",
        "sudo useradd -c '{{user `ansible_fullname`}}' -s /bin/bash -m {{user `ansible_username`}}",
        "sudo mkdir -p /home/{{user `ansible_username`}}/.ssh",
        "echo '{{user `ansible_ssh_key`}}' | sudo tee /home/{{user `ansible_username`}}/.ssh/authorized_keys",
        "sudo chmod 0600 /home/{{user `ansible_username`}}/.ssh/authorized_keys",
        "sudo chown -R {{user `ansible_username`}}:{{user `ansible_username`}} /home/{{user `ansible_username`}}/.ssh",
        "#",
        "#  Add Ansible to sudoers",
        "#",
        "echo '#  Disable tty to enable {{user `ansible_fullname`}} pipelining' | sudo tee -a /etc/sudoers.d/90-{{user `ansible_username`}}",
        "echo 'Defaults:{{user `ansible_username`}} !requiretty' | sudo tee -a /etc/sudoers.d/90-{{user `ansible_username`}}",
        "echo '{{user `ansible_username`}} ALL=(ALL:ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers.d/90-{{user `ansible_username`}}",
        "sudo chmod 0440 /etc/sudoers.d/90-{{user `ansible_username`}}",
        "sudo chown -R {{user `ansible_username`}}:{{user `ansible_username`}} /etc/sudoers.d/90-{{user `ansible_username`}}",
        "#",
        "#  Reset machine-id",
        "cat /dev/null | sudo tee /etc/machine-id",
        "cat /dev/null | sudo tee /var/lib/dbus/machine-id",
        "#",
        "#",
        "#  Disable root + packer users + exit out",
        "#",
        "sudo passwd --l {{user `ssh_username`}}",
        "sudo passwd --l root",
        "exit 0"
			]
		}
	],
  "post-processors": [
    {
      "type": "shell-local",
      "inline_shebang": "/bin/bash -e",
      "inline": [
        "qm set {{user `vm_id`}} --scsihw virtio-scsi-pci",
        "qm set {{user `vm_id`}} --ide2 local-lvm:cloudinit",
        "qm set {{user `vm_id`}} --boot c --bootdisk scsi0"
      ]
    }
  ]
}
